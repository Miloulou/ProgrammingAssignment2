

# create the matrix object.THrough it i can store a matrix
#and cache it's inverse matrix

makeCacheMatrix <- function(x = matrix()) {
  invMatrix <- NULL
  set <- function(y) {
    x <<- y
    invMatrix<<- NULL
  }
  get <- function() x
  setinvMatrix <- function(inverseMatrix) invMatrix <<- inverseMatrix
  getinvMatrix <- function() invMatrix
  list(set = set, get = get,
       setinvMatrix = setinvMatrix,
       getinvMatrix = getinvMatrix)
}


## calculates the inverse of the matrix
# if it's not already calculated. In that case cache has the result

cacheSolve <- function(x, ...) {
  invMatrix <- x$getinvMatrix()
  if(!is.null(invMatrix)) {
    message("getting cached data")
    return(invMatrix)
  }
  matrixData <- x$get()
  invMatrix <- solve(matrixData, ...)
  x$setinvMatrix(invMatrix)
  invMatrix
}
